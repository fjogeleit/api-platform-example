resources:
    App\Entity\Product:
        attributes:
            normalization_context: { groups: ['product_view'] }
            filters: ['product.search_filter']
            pagination_client_enabled: true
            client_items_per_page: true
            pagination_items_per_page: 50
        collectionOperations:
            get:
                method: 'GET'
                normalization_context: { groups: ['product_list'] }
            api_categories_products_get_subresource:
                method: 'GET'
                normalization_context: { groups: ['product_list'] }
        itemOperations:
            get:
                method: 'GET'
            put:
                method: 'PUT'
            delete:
                method: 'DELETE'
                route_name: 'app_product_delete'
                access_control: is_granted('ROLE_ADMIN')
    App\Entity\Warehouse:
        attributes:
            denormalization_context: { groups: ['warehouse_write'] }
        itemOperations:
            get:
                method: 'GET'
            put:
                method: 'PUT'
            delete:
                method: 'DELETE'
                route_name: 'app_warehouse_delete'
    App\Entity\Category:
        attributes:
            pagination_enabled: false
        properties:
            products:
                subresource: { collection: true, resourceClass: 'App\Entity\Product' }
        attributes:
            denormalization_context: { groups: ['category_write'] }
    App\Entity\User:
        attributes:
            pagination_enabled: false
        collectionOperations:
            login:
                method: 'POST'
                route_name: 'app_user_login'
                denormalization_context: { groups: ['user_login'] }
                swagger_context:
                    summary: 'API User-Login'
                    description: 'JWT API User-Login'
                    consumes: ['application/json']
                    produces: ['application/json']
                    responses:
                        201:
                            description: 'JWT Token'
                            schema:
                                type: 'object'
                                properties:
                                    token: { type: 'string' }
                        401:
                            description: 'Unauthorized'
                            schema:
                                type: 'object'
                                properties:
                                    code: { type: 'integer' }
                                    message: { type: 'string' }





            current:
                method: 'GET'
                route_name: 'users_current'
                access_control: is_granted('IS_AUTHENTICATED_FULLY')
                swagger_context:
                    summary: 'Logged in User'
                    description: 'Logged in UserData'
        itemOperations: []